package cz.magix.maarifa.simple.ui.composite;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Tree;
import com.vaadin.ui.VerticalLayout;

@org.springframework.stereotype.Component
public class RelationshipEditorComposite extends CustomComponent {
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout bottomToolbarLayout;

	@AutoGenerated
	private Button cancelButton;

	@AutoGenerated
	private Button selectButton;

	@AutoGenerated
	private VerticalLayout propertiesFormLayout;

	@AutoGenerated
	private Tree selectRelationshipTypeTree;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public RelationshipEditorComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// Check all possible outgoing relationship
		
		// From subset check all posiible incoming relationships
		
		// Fill tree by possible relationships
		
		// 
		
		
		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// selectRelationshipTypeTree
		selectRelationshipTypeTree = new Tree();
		selectRelationshipTypeTree.setImmediate(false);
		selectRelationshipTypeTree.setWidth("-1px");
		selectRelationshipTypeTree.setHeight("-1px");
		mainLayout.addComponent(selectRelationshipTypeTree);
		
		// propertiesFormLayout
		propertiesFormLayout = new VerticalLayout();
		propertiesFormLayout.setImmediate(false);
		propertiesFormLayout.setWidth("-1px");
		propertiesFormLayout.setHeight("-1px");
		propertiesFormLayout.setMargin(false);
		mainLayout.addComponent(propertiesFormLayout);
		
		// bottomToolbarLayout
		bottomToolbarLayout = buildBottomToolbarLayout();
		mainLayout.addComponent(bottomToolbarLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildBottomToolbarLayout() {
		// common part: create layout
		bottomToolbarLayout = new HorizontalLayout();
		bottomToolbarLayout.setImmediate(false);
		bottomToolbarLayout.setWidth("-1px");
		bottomToolbarLayout.setHeight("-1px");
		bottomToolbarLayout.setMargin(false);
		
		// selectButton
		selectButton = new Button();
		selectButton.setCaption("Select");
		selectButton.setImmediate(false);
		selectButton.setWidth("-1px");
		selectButton.setHeight("-1px");
		bottomToolbarLayout.addComponent(selectButton);
		
		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("Cancel");
		cancelButton.setImmediate(false);
		cancelButton.setWidth("-1px");
		cancelButton.setHeight("-1px");
		bottomToolbarLayout.addComponent(cancelButton);
		
		return bottomToolbarLayout;
	}

}
